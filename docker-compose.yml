version: '2'
services:
  worker0:
    build:
      context: ./worker
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      - WORKER_ID=0
    depends_on:
      - rabbitmq
      - mongodb
    # Allow access to docker daemon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/:/home/
    links:
      - rabbitmq
      - mongodb
  worker1:
    build:
      context: ./worker
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      - WORKER_ID=1
    depends_on:
      - rabbitmq
      - mongodb
    # Allow access to docker daemon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/:/home/
    links:
      - rabbitmq
      - mongodb
  sender:
    build:
      context: ./sender
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - rabbitmq
      - mongodb
    # Allow access to docker daemon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/;/home/
    links:
      - rabbitmq
      - mongodb
  rabbitmq:
    image: rabbitmq:3
    command: rabbitmq-server
    environment:
      #RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
  mongodb:
    image: mongo:latest
    #container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db
    ports:
      - 27017:27017
    command: mongod --smallfiles --logpath=/dev/null # --quiet

